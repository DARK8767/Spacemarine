Q1. Write a program to accept a number from user. Check whether number is perfect or not.
Use BufferedReader class for accepting input from user

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class PerfectNumber {
    public static void main(String[] args) {
        try {
            // Use BufferedReader to accept input from the user
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            
            System.out.print("Enter a number: ");
            int number = Integer.parseInt(reader.readLine());

            // Check if the number is perfect
            if (isPerfect(number)) {
                System.out.println(number + " is a perfect number.");
            } else {
                System.out.println(number + " is not a perfect number.");
            }

        } catch (IOException e) {
            System.out.println("An I/O error occurred: " + e.getMessage());
        } catch (NumberFormatException e) {
            System.out.println("Invalid input. Please enter a valid number.");
        }
    }

    // Method to check if a number is perfect
    static boolean isPerfect(int num) {
        if (num < 1) {
            return false;
        }

        int sum = 0;
        
        // Find the sum of divisors
        for (int i = 1; i <= num / 2; i++) {
            if (num % i == 0) {
                sum += i;
            }
        }
        
        // A perfect number is equal to the sum of its proper divisors
        return sum == num;
    }
}


Q2. Write a program that displays the number of characters, lines and words of a file.
[20 Marks

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;

public class FileStatistics {
    public static void main(String[] args) {
        if (args.length < 1) {
            System.out.println("Please provide the file path as a command line argument.");
            return;
        }

        String filePath = args[0];
        int lineCount = 0;
        int wordCount = 0;
        int charCount = 0;

        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            
            // Read file line by line
            while ((line = reader.readLine()) != null) {
                lineCount++;  // Increment line count for each line
                charCount += line.length();  // Add length of the line to character count
                
                // Use StringTokenizer to count words in the line
                StringTokenizer tokenizer = new StringTokenizer(line);
                wordCount += tokenizer.countTokens();
            }

            // Display file statistics
            System.out.println("File Statistics:");
            System.out.println("Number of lines: " + lineCount);
            System.out.println("Number of words: " + wordCount);
            System.out.println("Number of characters: " + charCount);

        } catch (IOException e) {
            System.out.println("An error occurred while reading the file: " + e.getMessage());
        }
    }
}

