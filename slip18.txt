Q1. Write a program to print the factors of a number. Accept a number using command line
argument. [10 Marks]

public class Factors {
    public static void main(String[] args) {
        if (args.length > 0) {
            try {
                // Parse the command-line argument to an integer
                int number = Integer.parseInt(args[0]);

                // Display the factors of the number
                System.out.println("Factors of " + number + " are:");
                for (int i = 1; i <= number; i++) {
                    if (number % i == 0) {
                        System.out.print(i + " ");
                    }
                }
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please provide a valid integer as a command-line argument.");
            }
        } else {
            System.out.println("Please provide a number as a command-line argument.");
        }
    }
}


Q2. Write a program to read the contents of “abc.txt” file. Display the contents of file in
uppercase as output.

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class ReadFileUpperCase {
    public static void main(String[] args) {
        BufferedReader reader = null;
        try {
            // Create a FileReader and wrap it in a BufferedReader for efficient reading
            reader = new BufferedReader(new FileReader("abc.txt"));
            String line;

            // Read each line from the file
            System.out.println("Contents of 'abc.txt' in uppercase:");
            while ((line = reader.readLine()) != null) {
                // Convert the line to uppercase and print it
                System.out.println(line.toUpperCase());
            }
        } catch (IOException e) {
            System.out.println("An error occurred while reading the file: " + e.getMessage());
        } finally {
            // Close the file reader in the 'finally' block to ensure it is always closed
            try {
                if (reader != null) {
                    reader.close();
                }
            } catch (IOException e) {
                System.out.println("Error closing the file reader: " + e.getMessage());
            }
        }
    }
}

