Q1. Write a program to accept a number from user and generate multiplication table of a
number. [10 Marks]

import java.util.Scanner;

public class MultiplicationTable {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();

        System.out.println("Multiplication Table of " + number);
        for (int i = 1; i <= 10; i++) {
            System.out.println(number + " x " + i + " = " + (number * i));
        }

        scanner.close();
    }
}

Q2. Construct a linked List containing names of colours: red, blue, yellow and orange. Then
extend the program to do the following:
i. Display the contents of the List using an Iterator
ii. Display the contents of the List in reverse order using a ListIterator
iii. Create another list containing pink and green. Insert the elements of this list between
blue and yellow. [20 Marks]

import java.util.LinkedList;
import java.util.ListIterator;

public class ColorLinkedList {
    public static void main(String[] args) {
        // Step 1: Create a linked list with colors
        LinkedList<String> colors = new LinkedList<>();
        colors.add("red");
        colors.add("blue");
        colors.add("yellow");
        colors.add("orange");

        // Step 2: Display contents of the list using an Iterator
        System.out.println("List contents using Iterator:");
        for (String color : colors) {
            System.out.println(color);
        }

        // Step 3: Display contents in reverse order using a ListIterator
        System.out.println("\nList contents in reverse order using ListIterator:");
        ListIterator<String> listIterator = colors.listIterator(colors.size());
        while (listIterator.hasPrevious()) {
            System.out.println(listIterator.previous());
        }

        // Step 4: Create another list containing pink and green and insert it
        LinkedList<String> newColors = new LinkedList<>();
        newColors.add("pink");
        newColors.add("green");

        colors.addAll(2, newColors); // Insert at index 2, between "blue" and "yellow"

        // Step 5: Display updated list
        System.out.println("\nUpdated List:");
        for (String color : colors) {
            System.out.println(color);
        }
    }
}

